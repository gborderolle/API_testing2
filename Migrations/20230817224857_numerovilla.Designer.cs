// <auto-generated />
using System;
using API_testing2.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_testing2.Migrations
{
    [DbContext(typeof(ContextDB))]
    [Migration("20230817224857_numerovilla")]
    partial class numerovilla
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API_testing2.Models.NumeroVilla", b =>
                {
                    b.Property<int>("VillaNro")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Creation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Update")
                        .HasColumnType("datetime2");

                    b.Property<int>("VillaId")
                        .HasColumnType("int");

                    b.HasKey("VillaNro");

                    b.HasIndex("VillaId");

                    b.ToTable("NumeroVilla");
                });

            modelBuilder.Entity("API_testing2.Models.Villa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Creation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Fee")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("SizeMeters")
                        .HasColumnType("int");

                    b.Property<int?>("Tenants")
                        .HasColumnType("int");

                    b.Property<DateTime>("Update")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Villa");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Creation = new DateTime(2023, 8, 17, 19, 48, 56, 742, DateTimeKind.Local).AddTicks(6720),
                            Details = "La villa grande",
                            Fee = 86m,
                            ImageUrl = "",
                            Name = "Villa número 1",
                            SizeMeters = 32,
                            Tenants = 10,
                            Update = new DateTime(2023, 8, 17, 19, 48, 56, 742, DateTimeKind.Local).AddTicks(6736)
                        },
                        new
                        {
                            Id = 2,
                            Creation = new DateTime(2023, 8, 17, 19, 48, 56, 742, DateTimeKind.Local).AddTicks(6740),
                            Details = "La villa mediana",
                            Fee = 50m,
                            ImageUrl = "",
                            Name = "Villa número 2",
                            SizeMeters = 25,
                            Tenants = 7,
                            Update = new DateTime(2023, 8, 17, 19, 48, 56, 742, DateTimeKind.Local).AddTicks(6741)
                        },
                        new
                        {
                            Id = 3,
                            Creation = new DateTime(2023, 8, 17, 19, 48, 56, 742, DateTimeKind.Local).AddTicks(6743),
                            Details = "La villa pequeña",
                            Fee = 28m,
                            ImageUrl = "",
                            Name = "Villa número 3",
                            SizeMeters = 18,
                            Tenants = 2,
                            Update = new DateTime(2023, 8, 17, 19, 48, 56, 742, DateTimeKind.Local).AddTicks(6744)
                        });
                });

            modelBuilder.Entity("API_testing2.Models.NumeroVilla", b =>
                {
                    b.HasOne("API_testing2.Models.Villa", "Villa")
                        .WithMany()
                        .HasForeignKey("VillaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Villa");
                });
#pragma warning restore 612, 618
        }
    }
}
