// <auto-generated />
using System;
using API_testing2.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_testing2.Migrations
{
    [DbContext(typeof(ContextDB))]
    partial class ContextDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API_testing2.Models.Villa", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime>("Creation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Fee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SizeMeters")
                        .HasColumnType("int");

                    b.Property<int?>("Tenants")
                        .HasColumnType("int");

                    b.Property<DateTime>("Update")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Villa");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Creation = new DateTime(2023, 8, 13, 19, 20, 47, 164, DateTimeKind.Local).AddTicks(4453),
                            Details = "La Villa Real 1 es grande y linda",
                            Fee = 200m,
                            ImageUrl = "",
                            Name = "Villa Real 1",
                            SizeMeters = 50,
                            Tenants = 5,
                            Update = new DateTime(2023, 8, 13, 19, 20, 47, 164, DateTimeKind.Local).AddTicks(4466)
                        },
                        new
                        {
                            Id = 2L,
                            Creation = new DateTime(2023, 8, 13, 19, 20, 47, 164, DateTimeKind.Local).AddTicks(4469),
                            Details = "La Villa Real 2 es chica",
                            Fee = 100m,
                            ImageUrl = "",
                            Name = "Villa Real 2",
                            SizeMeters = 23,
                            Tenants = 2,
                            Update = new DateTime(2023, 8, 13, 19, 20, 47, 164, DateTimeKind.Local).AddTicks(4470)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
